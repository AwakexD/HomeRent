@model HomeRent.Models.Shared.PagingViewModel

<ul class="wd-navigation mt-20 justify-content-center">
    <!-- Previous Page Link -->
    @if (Model.HasPreviousPage)
    {
        <li>
            <a href="@GeneratePageUrl(Model.PreviousPageNumber, Model.QueryParameters)" class="nav-item">
                <i class="icon icon-arr-l"></i>
            </a>
        </li>
    }
    else
    {
        <li class="disabled">
            <a href="#" class="nav-item">
                <i class="icon icon-arr-l"></i>
            </a>
        </li>
    }

    <!-- Page Numbers -->
    @for (int i = 1; i <= Model.PagesCount; i++)
    {
        if (i == Model.PageNumber)
        {
            <li>
                <a href="#" class="nav-item active">@i</a>
            </li>
        }
        else
        {
            <li>
                <a href="@GeneratePageUrl(i, Model.QueryParameters)" class="nav-item">@i</a>
            </li>
        }
    }

    <!-- Next Page Link -->
    @if (Model.HasNextPage)
    {
        <li>
            <a href="@GeneratePageUrl(Model.NextPageNumber, Model.QueryParameters)" class="nav-item">
                <i class="icon icon-arr-r"></i>
            </a>
        </li>
    }
    else
    {
        <li class="disabled">
            <a href="#" class="nav-item">
                <i class="icon icon-arr-r"></i>
            </a>
        </li>
    }
</ul>

@functions {
    private string GeneratePageUrl(int pageNumber, Dictionary<string, string> queryParams)
    {
        queryParams["Page"] = pageNumber.ToString();

        var queryString = string.Join("&", queryParams
            .Where(q => !string.IsNullOrEmpty(q.Value))
            .Select(q => $"{q.Key}={Uri.EscapeDataString(q.Value)}"));

        return $"?{queryString}";
    }
}